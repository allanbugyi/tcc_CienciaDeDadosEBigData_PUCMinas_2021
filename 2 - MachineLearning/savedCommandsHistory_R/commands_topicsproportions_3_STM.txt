install.packages("rtweet")
q()
library(rtweet)
library("rtweet")
library("tm")
library("topicmodels")
list_workspaces(subscription_id, resource_group = NULL)
ls()
libPaths()
.libPaths()
mypaths <- .libPaths()
mypaths <- c(mypaths, "/usr/local/R/x86_64-pc-linux-gnu-library/4.1")
mypaths
.libPaths(mypaths)
.libPaths()
library("rtweet")
detach("package:rtweet")
load(file = ".RData")
load(file = "/home/allan/Language-pt_Country-BR_Geo-NO_Original-YES_Likes-0_Retweets-0/full_text/.RData")
dim(corpus)
dim(tweets_dtm)
dim(tweets_tm)
ls()
dim(data)
data
ls()
corpus2
corpus1
corpus
dim(data)
mypaths
rm mypaths
rm(mypaths)
rm mypaths
mypaths
print(SEED)
k
SEED[
SEED
clear()
clean()
library("tm")
data2 <- removeNumbers(data)
corpus
data2
view(data)
View(data)
nrow(data)
ncol(data)
colnames(data)
str(data)
data$full_text
data2 <- removeNumbers(data$full_text)
data2
View(data2)
data2 <- removePunctuation(data2)
View(data2)
inspect(data2)
data2
data
View(data)
View(data2)
data2 <- removeWords(data2, stopwords("portuguese"))
View(data2)
dim(data2)
View(data2)
inspect(data2)
type(data2)
type() function R
typeof(data2)
data2$0
data2[0]
View(data2)
q()
setwd("Documentos/profissional/puc_minas/posGraduacao/tcc/dev/tweetsExtraidos&filtrados_Language-pt_Country-BR_Geo-NO_Original-YES_Likes-0_Retweets-0")
ls()
load("workspace_tcc.RData")
ls()
history()
library("tidytext")
library("dplyr")
library("magrittr")
library("tm")
library("slam")
tweets_LDA_Gibbs_gamma <- tidy(tweets_TM[["LDA_Gibbs"]], matrix = "gamma")
tweets_LDA_Gibbs_mostProbTopic <- tweets_LDA_Gibbs_gamma %>%
group_by(document) %>%
slice_max(gamma) %>%
ungroup()
str(tweets_LDA_Gibbs_mostProbTopic)
typeof(tweets_LDA_Gibbs_mostProbTopic)
write(tweets_LDA_Gibbs_mostProbTopic, file = "abc", append = FALSE)
write(as.data.frame(tweets_LDA_Gibbs_mostProbTopic), file = "abc", append = FALSE)
write(unlist(tweets_LDA_Gibbs_mostProbTopic), file = "abc", append = FALSE)
ls()
df <- as.data.frame(tweets_LDA_Gibbs_mostProbTopic$topic)
count_tps <- c(sum(df[1] == '1'), sum(df[1]=='2') , sum(df[1]=='3') , sum(df[1]=='4') , sum(df[1]=='5') , sum(df[1]=='6') , sum(df[1]=='7') , sum(df[1]=='8') 
, sum(df[1]=='9') , sum(df[1]=='10') , sum(df[1]=='11') , sum(df[1]=='12') , sum(df[1]=='13') , sum(df[1]=='14') , sum(df[1]=='15') , sum(df[1]=='16') , sum(df[1]=='17') 
, sum(df[1]=='18') , sum(df[1]=='19') , sum(df[1]=='20') , sum(df[1]=='21') , sum(df[1]=='22') , sum(df[1]=='23') , sum(df[1]=='24') , sum(df[1]=='25') , sum(df[1]=='26') 
, sum(df[1]=='27') , sum(df[1]=='28') , sum(df[1]=='29') , sum(df[1]=='30') 
)
sum(count_tps[1:30])
topicsProps <- lapply(count_tps, `/`, 41884)
sum(topicsProps)
topicsProps
count_tps[1]
count_tps[2]
count_tps[3]
count_tps[4]
count_tps[5]
count_tps[6]
count_tps[30[]
count_tps[30]
aux <- as.data.frame(unlist(topicsProps))
df <- aux
myvec
df
df$topics = myvec
df
colnames(df)[colnames(df) == "unlist(topicsProps)"] <- "props"
df
df_sorted <- df[order(-df$props),]
df_sorted
barplot(df_sorted$props, horiz=TRUE, xlim=c(0, 0.04), col=colorFunc(30), width = 0.01, names.arg=df_sorted$topics, las=1, main="LDA (Gibbs) proporções de tópicos", xlab="Proporção para 27599 tweets selecionados")
df_sorted <- df[order(df$props),]
barplot(df_sorted$props, horiz=TRUE, xlim=c(0, 0.04), col=colorFunc(30), width = 0.01, names.arg=df_sorted$topics, las=1, main="LDA (Gibbs) proporções de tópicos", xlab="Proporção para 27599 tweets selecionados")
png("LDA_Gibbs_topic_proportions.png", height=600, width=600)
barplot(df_sorted$props, horiz=TRUE, xlim=c(0, 0.04), col=colorFunc(30), width = 0.01, names.arg=df_sorted$topics, las=1, main="LDA (Gibbs) proporções de tópicos", xlab="Proporção para 27599 tweets selecionados")
dev.off()
ls()
LDA_VEM_topic_proportions
df_sorte
df_sorted
LDA_Gibbs_topic_proportions <- df_sorted
LDA_Gibbs_topic_proportions
png("LDA_VEM_topic_proportions.png", height=600, width=600)
barplot(LDA_VEM_topic_proportions$props, horiz=TRUE, xlim=c(0, 0.04), col=colorFunc(30), width = 0.01, names.arg=LDA_VEM_topic_proportions$topics, las=1, main="LDA (Gibbs) proporções de tópicos", xlab="Proporção para 27599 tweets selecionados")
dev.off()
png("LDA_VEM_topic_proportions.png", height=600, width=600)
barplot(LDA_VEM_topic_proportions$props, horiz=TRUE, xlim=c(0, 0.04), col=colorFunc(30), width = 0.01, names.arg=LDA_VEM_topic_proportions$topics, las=1, main="LDA (VEM) proporções de tópicos", xlab="Proporção para 27599 tweets selecionados")
dev.off()
png("LDA_VEM_topic_proportions.png", height=600, width=600)
barplot(LDA_VEM_topic_proportions$props, horiz=TRUE, xlim=c(0, 0.04), col=colorFunc(30), width = 0.01, names.arg=LDA_VEM_topic_proportions$topics, las=1, main="LDA (VEM) proporções de tópicos", xlab="Proporção para 27599 tweets selecionados")
dev.off()
save.image("workspace_tcc.RData")
ls()
rm(topicProp_LDA_VEM)
rm(aux)
rm(count_tps)
rm(df)
rm(df_sorted)
myvec
ls()
str(tweets_CTM_mostProbTopic)
str(tweets_CTM_gamma)
str(tweets_LDA_fixedVEM_mostProbTopic)
tweets_LDA_Gibbs_mostProbTopic
LDA_Gibbs_topic_proportions
tweets_CTM_gamma <- tidy(tweets_TM[["CTM"]], matrix = "gamma")
tweets_CTM_mostProbTopic <- tweets_ctm_gamma %>%
tweets_CTM_mostProbTopic <- tweets_CTM_gamma %>%
group_by(document) %>%
slice_max(gamma) %>%
ungroup()
df <- as.data.frame(tweets_LDA_fixedVEM_mostProbTopic$topic)
count_tps <- c(sum(df[1] == '1'), sum(df[1]=='2') , sum(df[1]=='3') , sum(df[1]=='4') , sum(df[1]=='5') , sum(df[1]=='6') , sum(df[1]=='7') , sum(df[1]=='8') 
, sum(df[1]=='9') , sum(df[1]=='10') , sum(df[1]=='11') , sum(df[1]=='12') , sum(df[1]=='13') , sum(df[1]=='14') , sum(df[1]=='15') , sum(df[1]=='16') , sum(df[1]=='17') 
, sum(df[1]=='18') , sum(df[1]=='19') , sum(df[1]=='20') , sum(df[1]=='21') , sum(df[1]=='22') , sum(df[1]=='23') , sum(df[1]=='24') , sum(df[1]=='25') , sum(df[1]=='26') 
, sum(df[1]=='27') , sum(df[1]=='28') , sum(df[1]=='29') , sum(df[1]=='30') 
)
um(count_tps[1:30])
sum(count_tps[1:30])
topicsProps <- lapply(count_tps, `/`, 27599)
sum(topicsProps)
count_tps[1]
count_tps[2]
count_tps[30]
df <- as.data.frame(unlist(topicsProps))
df$topics = myvec
df
colnames(df)[colnames(df) == "unlist(topicsProps)"] <- "props"
df
ls()
df_sorted <- df_sorted <- df[order(df$props),]
CTM_topic_proportions <- df_sorted
df_sorted
png("CTM_topic_proportions.png", height=600, width=600)
barplot(CTM_topic_proportions$props, horiz=TRUE, xlim=c(0, 0.06), col=colorFunc(30), width = 0.01, names.arg=CTM_topic_proportions$topics, las=1, main="CTM proporções de tópicos", xlab="Proporção para 27599 tweets selecionados")
dev.off()
ls()
rm(count_tps)
rm(df)
rm(df_sorted)
tweets_TMs <- tweets_TM
tweets_TMs
str(tweets_TMs)
ls()
rm(tweets_TM)
topicsVec <- myvec
topicsVec
rm(myvec)
ls()
rm(topicsProps)
rm(i)
ls()
save.image("workspace_tcc.RData")
tweets_STM_TM[["theta"]]
str(tweets_STM_TM[["theta"]])
dim(tweets_dtm)
dim(data_prep)
str(data_prep)
head(tweets_STM_TM[["theta"]])
typeof(tweets_STM_TM[["theta"]])
ls()
tweets_CTM_mostProbTopic <- tweets_STM_TM[["theta"]][1,1]
tweets_CTM_mostProbTopic
tweets_CTM_mostProbTopic <- tweets_STM_TM[["theta"]][1,1:30]
tweets_CTM_mostProbTopic
tweets_CTM_mostProbTopic <- tweets_STM_TM[["theta"]][1,max(1:30)]
tweets_CTM_mostProbTopic
tweets_CTM_mostProbTopic <- tweets_STM_TM[["theta"]][1,1:30]
tweets_CTM_mostProbTopic
tweets_CTM_mostProbTopic <- tweets_STM_TM[["theta"]][1,max(1:30)]
tweets_CTM_mostProbTopic
tweets_CTM_mostProbTopic <- max(tweets_STM_TM[["theta"]][1,1:30])
tweets_CTM_mostProbTopic
tweets_CTM_mostProbTopic <- max(tweets_STM_TM[["theta"]][1:2,1:30])
tweets_CTM_mostProbTopic
tweets_CTM_mostProbTopic <- max(tweets_STM_TM[["theta"]][,1:30])
tweets_CTM_mostProbTopic
str(tweets_STM_TM[["theta"]])
?max
ls()
myvec <- c()
for(i in 1:48888){  myvec <- append(myvec, max(tweets_STM_TM[["theta"]][i,1:30])) }
myvec[1:5]
max(tweets_STM_TM[["theta"]][1,1:30])
max(tweets_STM_TM[["theta"]][2,1:30])
max(tweets_STM_TM[["theta"]][3,1:30])
max(tweets_STM_TM[["theta"]][4,1:30])
max(tweets_STM_TM[["theta"]][5,1:30])
tweets_STM_TM[["theta"]][5,1:30]
max(tweets_STM_TM[["theta"]][4,1:30])
tweets_STM_TM[["theta"]][4,1:30]
savehistory("commandsTopicProportions_STM")
str(myvec)
mostProbTopics = c()
for(i in 1:48888){ for(j in 1:30){ if(tweets_STM_TM[["theta"]][i,j]==myvec[i]){ mostProbTopics <- append(mostProbTopics, j) } } }
mostProbTopics[1:5]
dim(mostProbTopics)
str(mostProbTopics)
df <- as.data.frame(mostProbTopics)
count_tps <- c(sum(df[1] == '1'), sum(df[1]=='2') , sum(df[1]=='3') , sum(df[1]=='4') , sum(df[1]=='5') , sum(df[1]=='6') , sum(df[1]=='7') , sum(df[1]=='8') 
, sum(df[1]=='9') , sum(df[1]=='10') , sum(df[1]=='11') , sum(df[1]=='12') , sum(df[1]=='13') , sum(df[1]=='14') , sum(df[1]=='15') , sum(df[1]=='16') , sum(df[1]=='17') 
, sum(df[1]=='18') , sum(df[1]=='19') , sum(df[1]=='20') , sum(df[1]=='21') , sum(df[1]=='22') , sum(df[1]=='23') , sum(df[1]=='24') , sum(df[1]=='25') , sum(df[1]=='26') 
, sum(df[1]=='27') , sum(df[1]=='28') , sum(df[1]=='29') , sum(df[1]=='30') 
)
count_tps[1]
count_tps[30]
count_tps[2]
count_tps[29]
str(data_prep)
head(df)
df <- as.data.frame(mostProbTopics)
head(df)
colnames(df)[colnames(df) == "mostProbTopics"] <- "props"
head(df)
df <- as.data.frame(count_tps)
df
colnames(df)[colnames(df) == "count_tps"] <- "props"
df
df_sorted <- df[order(-df$V1),]
df_sorted <- df[order(-df$props),]
df_sorted
df$topics = topicsVec
df_sorted <- df[order(-df$props),]
df_sorted
savehistory("commandsTopicProportions_STM")
png("CTM_topic_proportions.png", height=600, width=600)
barplot(df_sorted$props, horiz=TRUE, xlim=c(0, 0.05), col=colorFunc(30), width = 0.01, names.arg=df_sorted$topics, las=1, main="STM proporções de tópicos", xlab="Proporção para 27599 tweets selecionados")
dev.off()
df_sorted[/48888,]
df_sorted[/48888,"props"]
df_sorted[1,]
df_sorted[[1]]
df_sorted[1, "props"]
for(i in 1:30){ df_sorted[i,"props"] <- df_sorted[i,"props"]/48888 }
df_sorted
png("CTM_topic_proportions.png", height=600, width=600)
barplot(df_sorted$props, horiz=TRUE, xlim=c(0, 0.05), col=colorFunc(30), width = 0.01, names.arg=df_sorted$topics, las=1, main="STM proporções de tópicos", xlab="Proporção para 27599 tweets selecionados")
dev.off()
df_sorted <- df_sorted[order(df_sorted$props),]
df_sorted
png("CTM_topic_proportions.png", height=600, width=600)
barplot(df_sorted$props, horiz=TRUE, xlim=c(0, 0.2), col=colorFunc(30), width = 0.01, names.arg=df_sorted$topics, las=1, main="STM proporções de tópicos", xlab="Proporção para 27599 tweets selecionados")
dev.off()
png("CTM_topic_proportions.png", height=600, width=600)
barplot(df_sorted$props, horiz=TRUE, xlim=c(0, 0.15), col=colorFunc(30), width = 0.01, names.arg=df_sorted$topics, las=1, main="STM proporções de tópicos", xlab="Proporção para 27599 tweets selecionados")
dev.off()
library("quanteda")
?dfm
png("CTM_topic_proportions.png", height=600, width=600)
barplot(df_sorted$props, horiz=TRUE, xlim=c(0, 0.15), col=colorFunc(30), width = 0.01, names.arg=df_sorted$topics, las=1, main="STM proporções de tópicos", xlab="Proporção para 48888 tweets selecionados")
dev.off()
savehistory("commandsTopicProportions_STM")
